<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{720C0A68-B608-2F40-8EBA-F7E42EB27F61}
#using \{97B60D98-6C09-7743-ADBC-16D2565DEDAD}

import(traktor)

-- Main

Main = Main or class("Main", Stage)

function Main:new(params, environment)
	Stage.new(self, params, environment)

	self._inputMapping = environment.input.inputMapping

	local kart = self.world:getEntity("Kart0")
	local camera = self.world:getEntity("Camera0")
	self._followCamera0 = FollowCamera(camera, kart)

	local kart = self.world:getEntity("Kart1")
	local camera = self.world:getEntity("Camera1")
	self._followCamera1 = FollowCamera(camera, kart)
end

function Main:finalize()
end

function Main:update(info)

	-- Left Kart
	local steer = self._inputMapping:getStateValue("STATE_STEER_0")
	local throttle = self._inputMapping:getStateValue("STATE_THROTTLE_0")

	local kart = self.world:getEntity("Kart0")
	local vc = kart:getComponent(physics.VehicleComponent)
	vc.steerAngle = steer
	vc.engineThrottle = throttle

	self._followCamera0:update(info.simulationDeltaTime)


	-- Right Kart
	local steer = self._inputMapping:getStateValue("STATE_STEER_1")
	local throttle = self._inputMapping:getStateValue("STATE_THROTTLE_1")

	local kart = self.world:getEntity("Kart1")
	local vc = kart:getComponent(physics.VehicleComponent)
	vc.steerAngle = steer
	vc.engineThrottle = throttle

	self._followCamera1:update(info.simulationDeltaTime)

end

function Main:postUpdate(info)
end

	]]>
	</text>
</object>
