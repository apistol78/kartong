<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
FollowCamera = FollowCamera or class("FollowCamera")

function FollowCamera:new(cameraEntity, followEntity)
	self._cameraEntity = cameraEntity
	self._followEntity = followEntity
	self:_calculateTransforms()
end

function FollowCamera:update(deltaTime)
	self:_calculateTransforms()
end

function FollowCamera:reset()
	self:_calculateTransforms()
end

-- private

function FollowCamera:_calculateTransforms()
	local ToffsetY < const > = Transform(
		Vector4(0, 2.5, 0),
		Quaternion.identity
	)
	local ToffsetZ < const > = Transform(
		Vector4(0, 0, -2),
		Quaternion.identity
	)

	local D < const > = 2

	local T = ToffsetY * self._followEntity.transform * ToffsetZ

	local targetPosition = T.translation
	local optimalPosition = targetPosition - self._followEntity.transform.axisZ * D

	local cameraPosition = self._cameraEntity.transform.translation

	local d = targetPosition - cameraPosition
	local ln = d.length
	d = d / ln

	local position = Vector4.lerp(optimalPosition, targetPosition - d * D, 0.9)

	self._cameraEntity.transform = Transform.lookAt(
		position,
		self._followEntity.transform.translation, 
		Vector4(0, 1, 0)
	)
end

	]]>
	</text>
</object>
