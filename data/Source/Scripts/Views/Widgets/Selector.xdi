<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

Selector = Selector or class("Selector", Widget)

function Selector:new(parent)
	local mc = Widget._createEmptyResource(parent)
	self:_initialize(parent, mc)
end

function Selector:getPreferredSize()
	return
	{
		width = self._background_mc.width,
		height = #self._items * 80
	}
end

function Selector:place(x, y, width, height)
	Widget.place(self, x, y, width, height)
	self:_layout()
end

function Selector:add(item)
	local s = Static(self, item)
		:setTextSize(70)
	table.insert(self._items, s)
	self:_layout()
	return self
end

function Selector:select(index)
	self._index = index
	self:_layout()
end

function Selector:setOnActivate(fn)
	self._activateFn = fn
	return self
end

-- private

function Selector:_initialize(parent, mc)
	Widget._initialize(self, parent, mc)

	self._background_mc = Widget._createResource(self, "MC_SelectorBg")
	assert(self._background_mc ~= nil)

	self:addEventListener(KeyDownEvent, self, self._onKeyDown)
	self:addEventListener(KeyUpEvent, self, self._onKeyUp)

	self._items = {}
	self._index = 0
	self._tween = nil

#if defined(_EDITOR)
	self._mc.wireOutline = true
#endif
end

function Selector:_layout()
	local p = self:getPlacement()
	local w = self._background_mc.width
	local y = 0

	for idx, mc in ipairs(self._items) do
		local x < const > = (w - mc:getPreferredSize().width) / 2
		mc:place(x, y + 12, p.width, 80)
		if idx == self._index + 1 then
			mc:setTextColor(Color4f(1, 1, 1, 1))
		else
			mc:setTextColor(Color4f(1, 1, 1, 0.75))
		end
		y = y + 80
	end

	local fromY = self._background_mc.Y
	local toY = 10 + self._index * 80

	if self._tween ~= nil then
		self._tween:stop()
	end

	self._tween = Tween(0, 1, 1, function(v)
		local f = Ease.outElastic(v)
		self._background_mc.Y = fromY * (1 - f) + toY * f
	end)
end

function Selector:_onKeyDown(event)
	if event.code == spark.Key.AkUp then
		if self._index > 0 then
			self:select(self._index - 1)
		end
	elseif event.code == spark.Key.AkDown then
		if self._index < #self._items - 1 then
			self:select(self._index + 1)
		end
	end
end

function Selector:_onKeyUp(event)
	if event.code == spark.Key.AkEnter then
		if self._activateFn ~= nil then
			self._activateFn(self._index)
		end
	end
end

	]]>
	</text>
</object>
