<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

Selector = Selector or class("Selector", Widget)

function Selector:new(parent)
	local mc = Widget._createEmptyResource(parent)
	self:_initialize(parent, mc)
end

function Selector:remove()
	local cx = self._mc.context
	cx.key.eventKeyDown:remove(self._keyDownListener)

	Widget.remove(self)
end

function Selector:getPreferredSize()
	return { width = 300, height = 200 }
end

function Selector:place(x, y, width, height)
	Widget.place(self, x, y, width, height)
	self:_layout()
end

function Selector:add(item)
	local s = Static(self, item)
	table.insert(self._items, s)
	self:_layout()
	return self
end

function Selector:select(index)
	self._index = index
	self:_layout()
end

function Selector:setOnActivate(fn)
	self._activateFn = fn
	return self
end

-- private

function Selector:_initialize(parent, mc)
	Widget._initialize(self, parent, mc)

	self._background_mc = Widget._createResource(self, "MC_RacePositionBg")
	self._background_mc.scale = Vector2(20, 10)
	assert(self._background_mc ~= nil)

	local cx = self._mc.context
	self._keyDownListener = cx.key.eventKeyDown:add(function() self:_eventKeyDown() end)

	self._items = {}
	self._index = 0
end

function Selector:_layout()
	local p = self:getPlacement()

	local y = 0
	for _, mc in ipairs(self._items) do
		mc:place(10, y, p.width, 10)
		y = y + 40
	end

	self._background_mc.Y = 24 + self._index * 40
end

function Selector:_eventKeyDown()

	local key = self._mc.context.key
	if key.code == spark.Key.AkUp then
		if self._index > 0 then
			self:select(self._index - 1)
		end
	elseif key.code == spark.Key.AkDown then
		if self._index < #self._items - 1 then
			self:select(self._index + 1)
		end
	elseif key.code == spark.Key.AkEnter then
		if self._activateFn ~= nil then
			self._activateFn(self._index)
		end
	end

end


	]]>
	</text>
</object>
