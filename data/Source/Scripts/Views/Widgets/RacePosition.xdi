<?xml version="1.0" encoding="utf-8"?>
<object type="traktor.script.Script" version="2">
	<text>
	<![CDATA[
#using \{40191BBE-DDD0-0E47-92A9-66AF2CEC0F6F}

RacePosition = RacePosition or class("RacePosition", Widget)

function RacePosition:new(parent, nkarts)
	local mc = Widget._createEmptyResource(parent)
	self:_initialize(parent, mc, nkarts)
end

function RacePosition:getPreferredSize()
	return self._preferredSize
end

function RacePosition:setPosition(index, position, lanePosition)
	self._kart_mc[index]._position = position
	self._kart_mc[index]._lanePosition = lanePosition
end

function RacePosition:place(x, y, width, height)
	Widget.place(self, x, y, width, height)
	self:_update()
end

function RacePosition:update()
	self:_update()
end

-- private

function RacePosition:_initialize(parent, mc, nkarts)
	self._preferredSize = { width = 0, height = 0 }

	Widget._initialize(self, parent, mc)

	self._background_mc = Widget._createResource(self, "MC_RacePositionBg")
	assert(self._background_mc ~= nil)

	self._kart_mc = {}
	for i = 1, nkarts do
		local kmc = Widget._createResource(self, "MC_Kart")
		assert(kmc ~= nil)
		kmc._position = 0
		kmc._lanePosition = 0
		table.insert(self._kart_mc, kmc)
	end

	self._preferredSize.width = self._background_mc.width
	self._preferredSize.height = self._background_mc.height
end

function RacePosition:_update()
	for _, kmc in ipairs(self._kart_mc) do
		local m < const > = 30
		local w < const > = self._background_mc.width - kmc.width - m * 2
		local y < const > = 1 - (kmc._lanePosition + 1) / 2
		kmc.X = m + w * kmc._position
		kmc.Y = (self._background_mc.height - kmc.height) * y
	end
end

	]]>
	</text>
</object>
